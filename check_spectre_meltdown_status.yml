---
- name: Check the flags in the the spectre and meltdown system files
  hosts: all
  become: true
  gather_facts: false
  vars:
    # The path to the x86 specific kernel flags.
    sys_kernel_debug_path: "/sys/kernel/debug/x86"
    # Indirect Branch Prediction Barriers (ibpb)
    ibpb_path: "{{ sys_kernel_debug_path }}/ibpb_enabled"
    # Indirect Branch Restricted Speculation (ibrs)
    ibrs_path: "{{ sys_kernel_debug_path }}/ibrs_enabled"
    # Page Table Isolation (pti)
    pti_path: "{{ sys_kernel_debug_path }}/pti_enabled"
    # Retpoline (retp)
    retp_path: "{{ sys_kernel_debug_path }}/retp_enabled"
  tasks:
    # The files will contain a 1 for enabled and 0 for disabled.
    - name: Getting current status for retp, ibrs, ibpb, and pti flags
      command: "cat {{ retp_path }} {{ ibrs_path }} {{ ibpb_path }} {{ pti_path }}"
      register: values
      changed_when: false

    # Calculate enabled or disabled based on the flags current state.
    - name: Setting "enabled" or "disabled" based on the current status of the flags
      set_fact:
        # According to the most recent information disabled is (pti == 0 & ibrs == 0 & retp == 0).
        status: "{{ (values['stdout_lines'][0] == '0' and values['stdout_lines'][1] == '0' and values['stdout_lines'][3] == '0')|ternary('disabled','enabled') }}"

    # Print the results to the console.
    - name: Printing the results for spectre and meltdown protection
      debug:
        msg: "The spectre/meltdown protection is {{ status }}. retp = {{ values['stdout_lines'][0] }}, ibrs = {{ values['stdout_lines'][1] }}, ibpb = {{ values['stdout_lines'][2] }}, pti = {{ values['stdout_lines'][3] }}"
