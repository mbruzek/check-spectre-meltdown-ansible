---
- name: Check the flags in the the spectre and meltdown system files
  hosts: all
  become: true
  gather_facts: false
  vars:
    sys_kernel_debug_path: "/sys/kernel/debug/x86"
    # Indirect Branch Prediction Barriers (ibpb)
    ibpb_path: "{{ sys_kernel_debug_path }}/ibpb_enabled"
    # Indirect Branch Restricted Speculation (ibrs)
    ibrs_path: "{{ sys_kernel_debug_path }}/ibrs_enabled"
    # Page Table Isolation (pti)
    pti_path: "{{ sys_kernel_debug_path }}/pti_enabled"
    # Retpoline (retp)
    retp_path: "{{ sys_kernel_debug_path }}/retp_enabled"
  tasks:
    # The files will contain a 1 for enabled and 0 for disabled.
    - name: Checking for retp ibrs and ibpb pti flags
      command: "cat {{ retp_path }} {{ ibrs_path }} {{ ibpb_path }} {{ pti_path }}"
      register: values
      changed_when: false

    # All three flags must be set for the fix to be enabled.
    - name: Setting "enabled" or "disabled" based on the pti, ibrs and ibpr flags
      set_fact:
        status: "{{ (values['stdout_lines'][0] == '1' and values['stdout_lines'][1] == '1' and values['stdout_lines'][2] == '1' and values['stdout_lines'][3] == '1')|ternary('enabled','disabled') }}"

    # Print the results to the console.
    - name: Printing the results for spectre and meltdown protection
      debug:
        msg: "The spectre/meltdown protection is {{ status }}. retp {{ values['stdout_lines'][0] }} ibrs {{ values['stdout_lines'][1] }} ibpb {{ values['stdout_lines'][2] }} pti {{ values['stdout_lines'][3] }}"
